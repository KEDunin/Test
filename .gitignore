# Создано https://www.toptal.com/developers/gitignore/api/python
# Редактировать в https://www.toptal.com/developers/gitignore?templates=python

### Питон ###
# Скомпилированные в байтах / оптимизированные / DLL файлы
__пикеш__/
*.py[треска]
*$py.class

# Расширения C
*.so

# Дистрибуция / упаковка
.
Сборка на Python/
развиваются-яйца/
дист/
Загрузки/
яйца/
.яйца/
библиотека/
lib64/
части/
сдист/
var/
колеса/
поделиться /python-колеса/
*.egg-информация/
.installed.cfg
*.яйцо
МАНИФЕСТ

# PyInstaller # PyInstaller
# Обычно эти файлы записываются скриптом python из шаблона
# перед тем, как PyInstaller соберет exe-файл, чтобы ввести в него дату / другую информацию.
*.манифест
*.спецификация

# Журналы установщика
pip-log.txt
pip-delete-this-directory.txt

# Модульный тест / отчеты о покрытии
htmlcov/
.токсин/
.nox/
.охват
.охват.*
.кэш
nosetests.xml
coverage.xml
*.обложка
*.py,обложка
.гипотеза/
.pytest_cache/
обложка/

# Переводы
*.мо
*.горшок

# Джанго - штука:
*.журнал
регистрации
local_settings.py db.sqlite3
db.sqlite3-журнал

# Материал для колбы:
экземпляр/
.webassets-кэш

# Шершавый материал:
.шершавый

# Документация по Сфинксу
docs/_build/

# PyBuilder
.pybuilder/
цель/

# Записная книжка Jupyter
.ipynb_checkpoints

# IPython
profile_default профиль по умолчанию/
ipython_config.py

# пьенв
# Для библиотеки или пакета вы можете проигнорировать эти файлы, поскольку код
# предназначен для запуска в нескольких средах; в противном случае проверьте их в:
# .python-версия

# pipenv
# Согласно pypa / pipenv#598, рекомендуется включить Pipfile.заблокируйте систему управления версиями.
# Однако, в случае совместной работы, если у вас есть зависимости от платформы или зависимости
# не имея кросс-платформенной поддержки, pipenv может устанавливать зависимости, которые не работают или нет
# установите все необходимые зависимости.
#Pipfile.замок

# поэзия
# Аналогично Pipfile.однако, как правило, рекомендуется включать стихи.заблокируйте систему управления версиями.
# Это особенно рекомендуется для двоичных пакетов для обеспечения воспроизводимости и более
# обычно игнорируется для библиотек.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#поэзия.замок

# дпм
# Аналогично Pipfile.lock, обычно рекомендуется включить pdm.lock в систему управления версиями.
#pdm.блокировка
# pdm хранит конфигурации всего проекта в .pdm.toml, но рекомендуется не включать его
# в системе управления версиями.
# https://pdm.fming.dev/#use-with-ide
.дпм.томл

# PEP 582; используется, например, github.com/David-OConnor/pyflow и github.com/pdm-project/pdm
__пакеты__/

# Начинка
из сельдерея celerybeat-расписание
celerybeat.pid

# SageMath проанализировал файлы
*.sage.py

# Environments
.env
.venv
env/
венв/
ENV/
env.bak/
венв.бак/

# Настройки проекта Spyder
.spyderproject
.spyproject

# Настройки проекта веревки
.ropeproject

# документация
mkdocs /сайт

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Проверка типа погребального
костра .погребальный костер/

# pytype статический анализатор типов
.pytype/

# Символы отладки Cython
cython_debug/

# PyCharm
 Конкретный шаблон # JetBrains поддерживается в отдельном файле JetBrains.gitignore, который может
# быть найденным по адресу https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# и может быть добавлен в глобальный gitignore или объединен в этот файл. Для более ядерного
# опция (не рекомендуется) вы можете раскомментировать следующее, чтобы игнорировать всю папку idea.
#.идея/

# Конец https://www.toptal.com/developers/gitignore/api/python